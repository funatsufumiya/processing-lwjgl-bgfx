plugins {
    id 'java-library'
    id 'application'
}

group 'com.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    // implementation fileTree(dir: 'lib', include: ['lwjgl-glfw.jar', 'lwjgl-opengl.jar', 'lwjgl.jar'])
    implementation group: 'org.lwjgl', name: 'lwjgl', version: '3.3.5'
    implementation group: 'org.lwjgl', name: 'lwjgl-glfw', version: '3.3.5'
    implementation group: 'org.lwjgl', name: 'lwjgl-opengl', version: '3.3.5'
    // implementation group: 'org.processing', name: 'core', version: '3.3.7'
    // implementation(group: 'org.processing', name: 'core', version: '3.3.7') {
    //     exclude group: 'org.jogamp.jogl'
    //     exclude group: 'org.jogamp.gluegen'
    // }
    implementation(group: 'org.processing', name: 'core', version: '4.3.1') {
        exclude group: 'org.jogamp.jogl'
        exclude group: 'org.jogamp.gluegen'
    }
    testImplementation 'junit:junit:4.12'
}

sourceSets {
    main {
        java {
            srcDirs = ['src']
        }
        resources {
            srcDirs = ['resources']
        }
    }
    example {
        java {
            srcDirs = ['examples/LWJGL-test/src']
        }
        compileClasspath += sourceSets.main.output + configurations.compileClasspath
        runtimeClasspath += sourceSets.main.output + configurations.runtimeClasspath
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.register('buildExample', JavaCompile) {
    source = sourceSets.example.java
    classpath = sourceSets.example.compileClasspath + configurations.compileClasspath
    destinationDir = file("${buildDir}/classes/example")
    options.encoding = 'UTF-8'
}

task runExample(type: JavaExec) {
    classpath = sourceSets.example.runtimeClasspath
    main = 'test.PSketch'
}